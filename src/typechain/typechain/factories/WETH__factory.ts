/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526004808252630ae8aa8960e31b602080840182815285518087019096529285528401528151919291620000519160039162000070565b5080516200006790600490602084019062000070565b50505062000153565b8280546200007e9062000116565b90600052602060002090601f016020900481019282620000a25760008555620000ed565b82601f10620000bd57805160ff1916838001178555620000ed565b82800160010185558215620000ed579182015b82811115620000ed578251825591602001919060010190620000d0565b50620000fb929150620000ff565b5090565b5b80821115620000fb576000815560010162000100565b600181811c908216806200012b57607f821691505b602082108114156200014d57634e487b7160e01b600052602260045260246000fd5b50919050565b610d1780620001636000396000f3fe6080604052600436106100d65760003560e01c8063395093511161007f578063a457c2d711610059578063a457c2d714610225578063a9059cbb14610245578063d0e30db014610265578063dd62ed3e1461026d57600080fd5b806339509351146101ba57806370a08231146101da57806395d89b411461021057600080fd5b806323b872dd116100b057806323b872dd1461015c5780632e1a7d4d1461017c578063313ce5671461019e57600080fd5b806306fdde03146100e2578063095ea7b31461010d57806318160ddd1461013d57600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b506100f76102b3565b6040516101049190610b1c565b60405180910390f35b34801561011957600080fd5b5061012d610128366004610b8d565b610345565b6040519015158152602001610104565b34801561014957600080fd5b506002545b604051908152602001610104565b34801561016857600080fd5b5061012d610177366004610bb7565b61035d565b34801561018857600080fd5b5061019c610197366004610bf3565b610381565b005b3480156101aa57600080fd5b5060405160128152602001610104565b3480156101c657600080fd5b5061012d6101d5366004610b8d565b610431565b3480156101e657600080fd5b5061014e6101f5366004610c0c565b6001600160a01b031660009081526020819052604090205490565b34801561021c57600080fd5b506100f7610470565b34801561023157600080fd5b5061012d610240366004610b8d565b61047f565b34801561025157600080fd5b5061012d610260366004610b8d565b610529565b61019c610537565b34801561027957600080fd5b5061014e610288366004610c2e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102c290610c61565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee90610c61565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b5050505050905090565b600033610353818585610543565b5060019392505050565b60003361036b858285610668565b6103768585856106fa565b506001949350505050565b61038b33826108f7565b604051600090339061c35090849084818181858888f193505050503d80600081146103d2576040519150601f19603f3d011682016040523d82523d6000602084013e6103d7565b606091505b505090508061042d5760405162461bcd60e51b815260206004820152600e60248201527f6661696c656420746f2073656e6400000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610353908290869061046b908790610cb2565b610543565b6060600480546102c290610c61565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561051c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610424565b6103768286868403610543565b6000336103538185856106fa565b6105413334610a3d565b565b6001600160a01b0383166105a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b0382166106065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106f457818110156106e75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610424565b6106f48484848403610543565b50505050565b6001600160a01b0383166107765760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610424565b6001600160a01b0382166107d85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b6001600160a01b038316600090815260208190526040902054818110156108675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610424565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061089e908490610cb2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ea91815260200190565b60405180910390a36106f4565b6001600160a01b0382166109575760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610424565b6001600160a01b038216600090815260208190526040902054818110156109cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610424565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109fa908490610cca565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161065b565b6001600160a01b038216610a935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610424565b8060026000828254610aa59190610cb2565b90915550506001600160a01b03821660009081526020819052604081208054839290610ad2908490610cb2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610b4957858101830151858201604001528201610b2d565b81811115610b5b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b8857600080fd5b919050565b60008060408385031215610ba057600080fd5b610ba983610b71565b946020939093013593505050565b600080600060608486031215610bcc57600080fd5b610bd584610b71565b9250610be360208501610b71565b9150604084013590509250925092565b600060208284031215610c0557600080fd5b5035919050565b600060208284031215610c1e57600080fd5b610c2782610b71565b9392505050565b60008060408385031215610c4157600080fd5b610c4a83610b71565b9150610c5860208401610b71565b90509250929050565b600181811c90821680610c7557607f821691505b60208210811415610c9657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cc557610cc5610c9c565b500190565b600082821015610cdc57610cdc610c9c565b50039056fea2646970667358221220f21c57223b5f75d3065ed227e488c4cb189a61ce0ef5cb5218e28b739a9582b264736f6c63430008090033";

type WETHConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WETHConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WETH";
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly contractName: "WETH";
  public readonly contractName: "WETH";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
