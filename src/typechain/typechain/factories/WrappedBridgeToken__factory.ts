/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WrappedBridgeToken, WrappedBridgeTokenInterface } from "../WrappedBridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "canonical_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "BridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canonical",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001a3338038062001a3383398101604081905262000034916200028f565b8351849084906200004d906003906020850190620000ff565b50805162000063906004906020840190620000ff565b505050620000806200007a620000a960201b60201c565b620000ad565b600680546001600160a01b0319166001600160a01b0393841617905516608052506200035b9050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010d906200031e565b90600052602060002090601f0160209004810192826200013157600085556200017c565b82601f106200014c57805160ff19168380011785556200017c565b828001600101855582156200017c579182015b828111156200017c5782518255916020019190600101906200015f565b506200018a9291506200018e565b5090565b5b808211156200018a57600081556001016200018f565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001cd57600080fd5b81516001600160401b0380821115620001ea57620001ea620001a5565b604051601f8301601f19908116603f01168101908282118183101715620002155762000215620001a5565b816040528381526020925086838588010111156200023257600080fd5b600091505b8382101562000256578582018301518183018401529082019062000237565b83821115620002685760008385830101525b9695505050505050565b80516001600160a01b03811681146200028a57600080fd5b919050565b60008060008060808587031215620002a657600080fd5b84516001600160401b0380821115620002be57600080fd5b620002cc88838901620001bb565b95506020870151915080821115620002e357600080fd5b50620002f287828801620001bb565b935050620003036040860162000272565b9150620003136060860162000272565b905092959194509250565b600181811c908216806200033357607f821691505b602082108114156200035557634e487b7160e01b600052602260045260246000fd5b50919050565b6080516116996200039a600039600081816101fd01528181610490015281816105dc0152818161063e0152818161081301526108e401526116996000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063715018a6116100e3578063a457c2d71161008c578063dd62ed3e11610066578063dd62ed3e1461035d578063e78cea9214610396578063f2fde38b146103a957600080fd5b8063a457c2d714610317578063a9059cbb1461032a578063b8c876b11461033d57600080fd5b806395d89b41116100bd57806395d89b41146102e95780639c8f9f23146102f15780639dc29fac1461030457600080fd5b8063715018a6146102c8578063893d20e8146102d05780638da5cb5b146102d857600080fd5b8063313ce5671161014557806351c6590a1161011f57806351c6590a146102775780636eb382121461028c57806370a082311461029f57600080fd5b8063313ce56714610237578063395093511461025157806340c10f191461026457600080fd5b806318160ddd1161017657806318160ddd146101d357806323b872dd146101e557806326afaadd146101f857600080fd5b806306fdde0314610192578063095ea7b3146101b0575b600080fd5b61019a6103bc565b6040516101a79190611466565b60405180910390f35b6101c36101be3660046114b5565b61044e565b60405190151581526020016101a7565b6002545b6040519081526020016101a7565b6101c36101f33660046114df565b610466565b61021f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101a7565b61023f61048c565b60405160ff90911681526020016101a7565b6101c361025f3660046114b5565b610524565b6101c36102723660046114b5565b610563565b61028a61028536600461151b565b61060c565b005b61028a61029a366004611534565b6106a3565b6101d76102ad366004611534565b6001600160a01b031660009081526020819052604090205490565b61028a610758565b61021f6107be565b6005546001600160a01b031661021f565b61019a6107d2565b61028a6102ff36600461151b565b6107e1565b6101c36103123660046114b5565b610870565b6101c36103253660046114b5565b61090c565b6101c36103383660046114b5565b6109c1565b6101d761034b366004611534565b60076020526000908152604090205481565b6101d761036b36600461154f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60065461021f906001600160a01b031681565b61028a6103b7366004611534565b6109cf565b6060600380546103cb90611582565b80601f01602080910402602001604051908101604052809291908181526020018280546103f790611582565b80156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b5050505050905090565b60003361045c818585610ab1565b5060019392505050565b600033610474858285610bd5565b61047f858585610c67565b60019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f91906115bd565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061045c908290869061055e9087906115f6565b610ab1565b6006546000906001600160a01b031633146105c55760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f742062726964676500000000000000000000000060448201526064015b60405180910390fd5b6105cf3083610e64565b6106036001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484610f43565b50600192915050565b336000908152600760205260408120805483929061062b9084906115f6565b9091555061066690506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610fd8565b60408051338152602081018390527fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208891015b60405180910390a150565b6005546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bc565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a90602001610698565b6005546001600160a01b031633146107b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bc565b6107bc6000611010565b565b600061051f6005546001600160a01b031690565b6060600480546103cb90611582565b336000908152600760205260408120805483929061080090849061160e565b9091555061083a90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610f43565b60408051338152602081018390527fc2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf98401717199101610698565b6006546000906001600160a01b031633146108cd5760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f742062726964676500000000000000000000000060448201526064016105bc565b6108d7308361106f565b6106036001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085610fd8565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156109a95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016105bc565b6109b68286868403610ab1565b506001949350505050565b60003361045c818585610c67565b6005546001600160a01b03163314610a295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bc565b6001600160a01b038116610aa55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105bc565b610aae81611010565b50565b6001600160a01b038316610b135760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105bc565b6001600160a01b038216610b745760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105bc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c615781811015610c545760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105bc565b610c618484848403610ab1565b50505050565b6001600160a01b038316610ce35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105bc565b6001600160a01b038216610d455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105bc565b6001600160a01b03831660009081526020819052604090205481811015610dd45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105bc565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e0b9084906115f6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5791815260200190565b60405180910390a3610c61565b6001600160a01b038216610eba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105bc565b8060026000828254610ecc91906115f6565b90915550506001600160a01b03821660009081526020819052604081208054839290610ef99084906115f6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b038316602482015260448101829052610fd390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526111bd565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c619085906323b872dd60e01b90608401610f6f565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166110cf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105bc565b6001600160a01b038216600090815260208190526040902054818110156111435760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105bc565b6001600160a01b038316600090815260208190526040812083830390556002805484929061117290849061160e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000611212826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112a29092919063ffffffff16565b805190915015610fd357808060200190518101906112309190611625565b610fd35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105bc565b60606112b184846000856112b9565b949350505050565b6060824710156113315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105bc565b6001600160a01b0385163b6113885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bc565b600080866001600160a01b031685876040516113a49190611647565b60006040518083038185875af1925050503d80600081146113e1576040519150601f19603f3d011682016040523d82523d6000602084013e6113e6565b606091505b50915091506113f6828286611401565b979650505050505050565b60608315611410575081610485565b8251156114205782518084602001fd5b8160405162461bcd60e51b81526004016105bc9190611466565b60005b8381101561145557818101518382015260200161143d565b83811115610c615750506000910152565b602081526000825180602084015261148581604085016020870161143a565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146114b057600080fd5b919050565b600080604083850312156114c857600080fd5b6114d183611499565b946020939093013593505050565b6000806000606084860312156114f457600080fd5b6114fd84611499565b925061150b60208501611499565b9150604084013590509250925092565b60006020828403121561152d57600080fd5b5035919050565b60006020828403121561154657600080fd5b61048582611499565b6000806040838503121561156257600080fd5b61156b83611499565b915061157960208401611499565b90509250929050565b600181811c9082168061159657607f821691505b602082108114156115b757634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156115cf57600080fd5b815160ff8116811461048557600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611609576116096115e0565b500190565b600082821015611620576116206115e0565b500390565b60006020828403121561163757600080fd5b8151801515811461048557600080fd5b6000825161165981846020870161143a565b919091019291505056fea26469706673582212203d6d1e071955ac1bc02fc4511f405a760323d9860b71666ac70c091b5e01dd2064736f6c63430008090033";

type WrappedBridgeTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WrappedBridgeTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class WrappedBridgeToken__factory extends ContractFactory {
  constructor(...args: WrappedBridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WrappedBridgeToken";
  }

  deploy(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<WrappedBridgeToken> {
    return super.deploy(name_, symbol_, bridge_, canonical_, overrides || {}) as Promise<WrappedBridgeToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, bridge_, canonical_, overrides || {});
  }
  attach(address: string): WrappedBridgeToken {
    return super.attach(address) as WrappedBridgeToken;
  }
  connect(signer: Signer): WrappedBridgeToken__factory {
    return super.connect(signer) as WrappedBridgeToken__factory;
  }
  static readonly contractName: "WrappedBridgeToken";
  public readonly contractName: "WrappedBridgeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedBridgeTokenInterface {
    return new utils.Interface(_abi) as WrappedBridgeTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WrappedBridgeToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedBridgeToken;
  }
}
