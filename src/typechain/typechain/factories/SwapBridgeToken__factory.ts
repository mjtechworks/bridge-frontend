/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapBridgeToken, SwapBridgeTokenInterface } from "../SwapBridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "canonical_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "BridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approveCanonical",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canonical",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeCanonical",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b2e38038062001b2e83398101604081905262000034916200028f565b8351849084906200004d906003906020850190620000ff565b50805162000063906004906020840190620000ff565b505050620000806200007a620000a960201b60201c565b620000ad565b600680546001600160a01b0319166001600160a01b0393841617905516608052506200035b9050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010d906200031e565b90600052602060002090601f0160209004810192826200013157600085556200017c565b82601f106200014c57805160ff19168380011785556200017c565b828001600101855582156200017c579182015b828111156200017c5782518255916020019190600101906200015f565b506200018a9291506200018e565b5090565b5b808211156200018a57600081556001016200018f565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001cd57600080fd5b81516001600160401b0380821115620001ea57620001ea620001a5565b604051601f8301601f19908116603f01168101908282118183101715620002155762000215620001a5565b816040528381526020925086838588010111156200023257600080fd5b600091505b8382101562000256578582018301518183018401529082019062000237565b83821115620002685760008385830101525b9695505050505050565b80516001600160a01b03811681146200028a57600080fd5b919050565b60008060008060808587031215620002a657600080fd5b84516001600160401b0380821115620002be57600080fd5b620002cc88838901620001bb565b95506020870151915080821115620002e357600080fd5b50620002f287828801620001bb565b935050620003036040860162000272565b9150620003136060860162000272565b905092959194509250565b600181811c908216806200033357607f821691505b602082108114156200035557634e487b7160e01b600052602260045260246000fd5b50919050565b608051611786620003a8600039600081816101f20152818161044f015281816105ad01528181610640015281816108150152818161085c01528181610a0f0152610a9601526117866000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063893d20e8116100d8578063a9059cbb1161008c578063e8d2ee0411610066578063e8d2ee0414610358578063ef0f7d2114610360578063f2fde38b1461036857600080fd5b8063a9059cbb146102f9578063dd62ed3e1461030c578063e78cea921461034557600080fd5b806395d89b41116100bd57806395d89b41146102cb5780639dc29fac146102d3578063a457c2d7146102e657600080fd5b8063893d20e8146102b25780638da5cb5b146102ba57600080fd5b8063313ce5671161013a5780636eb38212116101145780636eb382121461026c57806370a0823114610281578063715018a6146102aa57600080fd5b8063313ce5671461022c578063395093511461024657806340c10f191461025957600080fd5b806318160ddd1161016b57806318160ddd146101c857806323b872dd146101da57806326afaadd146101ed57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f61037b565b60405161019c9190611553565b60405180910390f35b6101b86101b33660046115a2565b61040d565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101b86101e83660046115cc565b610425565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019c565b61023461044b565b60405160ff909116815260200161019c565b6101b86102543660046115a2565b6104e3565b6101b86102673660046115a2565b610522565b61027f61027a366004611608565b610667565b005b6101cc61028f366004611608565b6001600160a01b031660009081526020819052604090205490565b61027f610722565b610214610788565b6005546001600160a01b0316610214565b61018f61079c565b6101b86102e13660046115a2565b6107ab565b6101b86102f43660046115a2565b6108ec565b6101b86103073660046115a2565b6109a1565b6101cc61031a366004611623565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610214906001600160a01b031681565b61027f6109af565b61027f610a36565b61027f610376366004611608565b610abc565b60606003805461038a90611656565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611656565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b5050505050905090565b60003361041b818585610b9e565b5060019392505050565b600033610433858285610cc2565b61043e858585610d54565b60019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a657600080fd5b505afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190611691565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061041b908290869061051d9087906116ca565b610b9e565b6006546000906001600160a01b031633146105845760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f742062726964676500000000000000000000000060448201526064015b60405180910390fd5b61058e3083610f51565b604051637b8b499760e11b8152306004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f716932e90604401602060405180830381600087803b1580156105f957600080fd5b505af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063191906116e2565b905061041b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168583611030565b6005546001600160a01b031633146106c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a9060200160405180910390a150565b6005546001600160a01b0316331461077c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b61078660006110c5565b565b60006104de6005546001600160a01b031690565b60606004805461038a90611656565b6006546000906001600160a01b031633146108085760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f7420627269646765000000000000000000000000604482015260640161057b565b61083d6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085611124565b6040516304fc692960e21b8152306004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906313f1a4a490604401602060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e091906116e2565b905061041b308261115c565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156109895760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161057b565b6109968286868403610b9e565b506001949350505050565b60003361041b818585610d54565b6005546001600160a01b03163314610a095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b610786307f0000000000000000000000000000000000000000000000000000000000000000600019610b9e565b6005546001600160a01b03163314610a905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b610786307f00000000000000000000000000000000000000000000000000000000000000006000610b9e565b6005546001600160a01b03163314610b165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057b565b6001600160a01b038116610b925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161057b565b610b9b816110c5565b50565b6001600160a01b038316610c005760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161057b565b6001600160a01b038216610c615760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161057b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610d4e5781811015610d415760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161057b565b610d4e8484848403610b9e565b50505050565b6001600160a01b038316610dd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161057b565b6001600160a01b038216610e325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161057b565b6001600160a01b03831660009081526020819052604090205481811015610ec15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161057b565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ef89084906116ca565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f4491815260200190565b60405180910390a3610d4e565b6001600160a01b038216610fa75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161057b565b8060026000828254610fb991906116ca565b90915550506001600160a01b03821660009081526020819052604081208054839290610fe69084906116ca565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0383166024820152604481018290526110c090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526112aa565b505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d4e9085906323b872dd60e01b9060840161105c565b6001600160a01b0382166111bc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161057b565b6001600160a01b038216600090815260208190526040902054818110156112305760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161057b565b6001600160a01b038316600090815260208190526040812083830390556002805484929061125f9084906116fb565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60006112ff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661138f9092919063ffffffff16565b8051909150156110c0578080602001905181019061131d9190611712565b6110c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161057b565b606061139e84846000856113a6565b949350505050565b60608247101561141e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161057b565b6001600160a01b0385163b6114755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057b565b600080866001600160a01b031685876040516114919190611734565b60006040518083038185875af1925050503d80600081146114ce576040519150601f19603f3d011682016040523d82523d6000602084013e6114d3565b606091505b50915091506114e38282866114ee565b979650505050505050565b606083156114fd575081610444565b82511561150d5782518084602001fd5b8160405162461bcd60e51b815260040161057b9190611553565b60005b8381101561154257818101518382015260200161152a565b83811115610d4e5750506000910152565b6020815260008251806020840152611572816040850160208701611527565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461159d57600080fd5b919050565b600080604083850312156115b557600080fd5b6115be83611586565b946020939093013593505050565b6000806000606084860312156115e157600080fd5b6115ea84611586565b92506115f860208501611586565b9150604084013590509250925092565b60006020828403121561161a57600080fd5b61044482611586565b6000806040838503121561163657600080fd5b61163f83611586565b915061164d60208401611586565b90509250929050565b600181811c9082168061166a57607f821691505b6020821081141561168b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116a357600080fd5b815160ff8116811461044457600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156116dd576116dd6116b4565b500190565b6000602082840312156116f457600080fd5b5051919050565b60008282101561170d5761170d6116b4565b500390565b60006020828403121561172457600080fd5b8151801515811461044457600080fd5b60008251611746818460208701611527565b919091019291505056fea26469706673582212209ed0bb9287a1a8c5a655da729ee0eab559f04dab5bd77b546b334a59349ef3c764736f6c63430008090033";

type SwapBridgeTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SwapBridgeTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SwapBridgeToken__factory extends ContractFactory {
  constructor(...args: SwapBridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SwapBridgeToken";
  }

  deploy(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SwapBridgeToken> {
    return super.deploy(name_, symbol_, bridge_, canonical_, overrides || {}) as Promise<SwapBridgeToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    bridge_: string,
    canonical_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, bridge_, canonical_, overrides || {});
  }
  attach(address: string): SwapBridgeToken {
    return super.attach(address) as SwapBridgeToken;
  }
  connect(signer: Signer): SwapBridgeToken__factory {
    return super.connect(signer) as SwapBridgeToken__factory;
  }
  static readonly contractName: "SwapBridgeToken";
  public readonly contractName: "SwapBridgeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapBridgeTokenInterface {
    return new utils.Interface(_abi) as SwapBridgeTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SwapBridgeToken {
    return new Contract(address, _abi, signerOrProvider) as SwapBridgeToken;
  }
}
