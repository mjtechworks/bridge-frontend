/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MCNNFT, MCNNFTInterface } from "../MCNNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_nftBridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "NFTBridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_receiver",
        type: "bytes",
      },
    ],
    name: "crossChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "crossChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBridge",
        type: "address",
      },
    ],
    name: "setNFTBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "totalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002cb238038062002cb2833981016040819052620000349162000338565b82826200004133620000ad565b815162000056906001906020850190620001c5565b5080516200006c906002906020840190620001c5565b50506008805460ff19169055506200008433620000fd565b600a80546001600160a01b0319166001600160a01b039290921691909117905550620004029050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526009602052604090205460ff16156200016b5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c72656164792070617573657200000000000000604482015260640160405180910390fd5b6001600160a01b038116600081815260096020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8910160405180910390a150565b828054620001d390620003c5565b90600052602060002090601f016020900481019282620001f7576000855562000242565b82601f106200021257805160ff191683800117855562000242565b8280016001018555821562000242579182015b828111156200024257825182559160200191906001019062000225565b506200025092915062000254565b5090565b5b8082111562000250576000815560010162000255565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029357600080fd5b81516001600160401b0380821115620002b057620002b06200026b565b604051601f8301601f19908116603f01168101908282118183101715620002db57620002db6200026b565b81604052838152602092508683858801011115620002f857600080fd5b600091505b838210156200031c5785820183015181830184015290820190620002fd565b838211156200032e5760008385830101525b9695505050505050565b6000806000606084860312156200034e57600080fd5b83516001600160401b03808211156200036657600080fd5b620003748783880162000281565b945060208601519150808211156200038b57600080fd5b506200039a8682870162000281565b604086015190935090506001600160a01b0381168114620003ba57600080fd5b809150509250925092565b600181811c90821680620003da57607f821691505b60208210811415620003fc57634e487b7160e01b600052602260045260246000fd5b50919050565b6128a080620004126000396000f3fe6080604052600436106101cd5760003560e01c80636ef8d66d116100f7578063a22cb46511610095578063c87b56dd11610064578063c87b56dd1461052a578063d3fc98641461054a578063e985e9c51461056a578063f2fde38b146105b357600080fd5b8063a22cb465146104aa578063a481d59b146104ca578063af91b174146104ea578063b88d4fde1461050a57600080fd5b806382dc1ec4116100d157806382dc1ec4146104425780638456cb59146104625780638da5cb5b1461047757806395d89b411461049557600080fd5b80636ef8d66d146103dd57806370a08231146103f257806380f51c121461041257600080fd5b80633f4ba83a1161016f5780635c975abb1161013e5780635c975abb146103655780636352211e1461037d57806367d74de21461039d5780636b2c0f55146103bd57600080fd5b80633f4ba83a146102e457806342842e0e146102f9578063446456b81461031957806346fbf68e1461032c57600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063183b42731461028357806323b872dd146102b157806331c9cbcf146102d157600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612206565b6105d3565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610625565b6040516101fe919061227b565b34801561023557600080fd5b5061024961024436600461228e565b6106b7565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c3660046122c3565b610751565b005b34801561028f57600080fd5b506102a361029e366004612305565b610867565b6040519081526020016101fe565b3480156102bd57600080fd5b506102816102cc366004612321565b610901565b6102816102df36600461235d565b610988565b3480156102f057600080fd5b50610281610ab4565b34801561030557600080fd5b50610281610314366004612321565b610b1d565b6102816103273660046123e4565b610b38565b34801561033857600080fd5b506101f2610347366004612420565b6001600160a01b031660009081526009602052604090205460ff1690565b34801561037157600080fd5b5060085460ff166101f2565b34801561038957600080fd5b5061024961039836600461228e565b610c61565b3480156103a957600080fd5b506102816103b83660046124c7565b610cec565b3480156103c957600080fd5b506102816103d8366004612420565b610d5a565b3480156103e957600080fd5b50610281610dcf565b3480156103fe57600080fd5b506102a361040d366004612420565b610dd8565b34801561041e57600080fd5b506101f261042d366004612420565b60096020526000908152604090205460ff1681565b34801561044e57600080fd5b5061028161045d366004612420565b610e72565b34801561046e57600080fd5b50610281610ee4565b34801561048357600080fd5b506000546001600160a01b0316610249565b3480156104a157600080fd5b5061021c610f4b565b3480156104b657600080fd5b506102816104c5366004612532565b610f5a565b3480156104d657600080fd5b506102816104e5366004612420565b610f69565b3480156104f657600080fd5b50600a54610249906001600160a01b031681565b34801561051657600080fd5b5061028161052536600461256e565b611027565b34801561053657600080fd5b5061021c61054536600461228e565b6110b5565b34801561055657600080fd5b506102816105653660046124c7565b611248565b34801561057657600080fd5b506101f26105853660046125ea565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b3480156105bf57600080fd5b506102816105ce366004612420565b6112b1565b60006001600160e01b031982166380ac58cd60e01b148061060457506001600160e01b03198216635b5e139f60e01b145b8061061f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546106349061261d565b80601f01602080910402602001604051908101604052809291908181526020018280546106609061261d565b80156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166107355760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061075c82610c61565b9050806001600160a01b0316836001600160a01b031614156107ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161072c565b336001600160a01b03821614806107e657506107e68133610585565b6108585760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161072c565b610862838361139f565b505050565b600a54604051639c1a65bd60e01b815267ffffffffffffffff84166004820152306024820152604481018390526000916001600160a01b031690639c1a65bd9060640160206040518083038186803b1580156108c257600080fd5b505afa1580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa9190612658565b9392505050565b61090b338261140d565b61097d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161072c565b610862838383611500565b60085460ff16156109ce5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161072c565b6109d783610c61565b6001600160a01b0316336001600160a01b031614610a295760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b604482015260640161072c565b6000610a34846110b5565b9050610a3f846116b4565b600a54604051631dd2375760e31b81526001600160a01b039091169063ee91bab8903490610a7b9089903390899089908c908a90600401612671565b6000604051808303818588803b158015610a9457600080fd5b505af1158015610aa8573d6000803e3d6000fd5b50505050505050505050565b3360009081526009602052604090205460ff16610b135760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f7420706175736572000000000000000000000000604482015260640161072c565b610b1b6116f4565b565b61086283838360405180602001604052806000815250611027565b60085460ff1615610b7e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161072c565b610b8782610c61565b6001600160a01b0316336001600160a01b031614610bd95760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b604482015260640161072c565b6000610be4836110b5565b9050610bef836116b4565b600a54604051637865abe760e11b81526001600160a01b039091169063f0cb57ce903490610c29908890339088908a9089906004016126e1565b6000604051808303818588803b158015610c4257600080fd5b505af1158015610c56573d6000803e3d6000fd5b505050505050505050565b6000818152600360205260408120546001600160a01b03168061061f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161072c565b600a546001600160a01b03163314610d465760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f7420627269646765000000000000000000000000604482015260640161072c565b610d508383611790565b61086282826118d2565b33610d6d6000546001600160a01b031690565b6001600160a01b031614610dc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072c565b610dcc8161197b565b50565b610b1b3361197b565b60006001600160a01b038216610e565760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161072c565b506001600160a01b031660009081526004602052604090205490565b33610e856000546001600160a01b031690565b6001600160a01b031614610edb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072c565b610dcc81611a34565b3360009081526009602052604090205460ff16610f435760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f7420706175736572000000000000000000000000604482015260640161072c565b610b1b611af1565b6060600280546106349061261d565b610f65338383611b6c565b5050565b33610f7c6000546001600160a01b031690565b6001600160a01b031614610fd25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072c565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527ff4bc0bf59fb83d1858c773c97d46d5e804f4245cd5091252952b86ee5f3ba210906020015b60405180910390a150565b611031338361140d565b6110a35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161072c565b6110af84848484611c3b565b50505050565b6000818152600360205260409020546060906001600160a01b03166111425760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000606482015260840161072c565b6000828152600760205260408120805461115b9061261d565b80601f01602080910402602001604051908101604052809291908181526020018280546111879061261d565b80156111d45780601f106111a9576101008083540402835291602001916111d4565b820191906000526020600020905b8154815290600101906020018083116111b757829003601f168201915b5050505050905060006111f260408051602081019091526000815290565b9050805160001415611205575092915050565b81511561123757808260405160200161121f92919061272e565b60405160208183030381529060405292505050919050565b61124084611cc4565b949350505050565b3361125b6000546001600160a01b031690565b6001600160a01b031614610d465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072c565b336112c46000546001600160a01b031690565b6001600160a01b03161461131a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072c565b6001600160a01b0381166113965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161072c565b610dcc81611db9565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113d482610c61565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b03166114865760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161072c565b600061149183610c61565b9050806001600160a01b0316846001600160a01b031614806114cc5750836001600160a01b03166114c1846106b7565b6001600160a01b0316145b8061124057506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff16611240565b826001600160a01b031661151382610c61565b6001600160a01b03161461158f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161072c565b6001600160a01b0382166115f15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161072c565b6115fc60008261139f565b6001600160a01b0383166000908152600460205260408120805460019290611625908490612773565b90915550506001600160a01b038216600090815260046020526040812080546001929061165390849061278a565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6116bd81611e09565b600081815260076020526040902080546116d69061261d565b159050610dcc576000818152600760205260408120610dcc9161211d565b60085460ff166117465760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161072c565b6008805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166117e65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161072c565b6000818152600360205260409020546001600160a01b03161561184b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161072c565b6001600160a01b038216600090815260046020526040812080546001929061187490849061278a565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600360205260409020546001600160a01b031661195c5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161072c565b6000828152600760209081526040909120825161086292840190612157565b6001600160a01b03811660009081526009602052604090205460ff166119e35760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f74207061757365720000000000000000000000604482015260640161072c565b6001600160a01b038116600081815260096020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e910161101c565b6001600160a01b03811660009081526009602052604090205460ff1615611a9d5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c72656164792070617573657200000000000000604482015260640161072c565b6001600160a01b038116600081815260096020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8910161101c565b60085460ff1615611b375760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161072c565b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117733390565b816001600160a01b0316836001600160a01b03161415611bce5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161072c565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c46848484611500565b611c5284848484611ea4565b6110af5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161072c565b6000818152600360205260409020546060906001600160a01b0316611d515760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161072c565b6000611d6860408051602081019091526000815290565b90506000815111611d8857604051806020016040528060008152506108fa565b80611d9284612007565b604051602001611da392919061272e565b6040516020818303038152906040529392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611e1482610c61565b9050611e2160008361139f565b6001600160a01b0381166000908152600460205260408120805460019290611e4a908490612773565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611ffc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ee89033908990889088906004016127a2565b602060405180830381600087803b158015611f0257600080fd5b505af1925050508015611f32575060408051601f3d908101601f19168201909252611f2f918101906127de565b60015b611fe2573d808015611f60576040519150601f19603f3d011682016040523d82523d6000602084013e611f65565b606091505b508051611fda5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161072c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611240565b506001949350505050565b60608161202b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612055578061203f816127fb565b915061204e9050600a8361282c565b915061202f565b60008167ffffffffffffffff8111156120705761207061243b565b6040519080825280601f01601f19166020018201604052801561209a576020820181803683370190505b5090505b8415611240576120af600183612773565b91506120bc600a86612840565b6120c790603061278a565b60f81b8183815181106120dc576120dc612854565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612116600a8661282c565b945061209e565b5080546121299061261d565b6000825580601f10612139575050565b601f016020900490600052602060002090810190610dcc91906121db565b8280546121639061261d565b90600052602060002090601f01602090048101928261218557600085556121cb565b82601f1061219e57805160ff19168380011785556121cb565b828001600101855582156121cb579182015b828111156121cb5782518255916020019190600101906121b0565b506121d79291506121db565b5090565b5b808211156121d757600081556001016121dc565b6001600160e01b031981168114610dcc57600080fd5b60006020828403121561221857600080fd5b81356108fa816121f0565b60005b8381101561223e578181015183820152602001612226565b838111156110af5750506000910152565b60008151808452612267816020860160208601612223565b601f01601f19169290920160200192915050565b6020815260006108fa602083018461224f565b6000602082840312156122a057600080fd5b5035919050565b80356001600160a01b03811681146122be57600080fd5b919050565b600080604083850312156122d657600080fd5b6122df836122a7565b946020939093013593505050565b803567ffffffffffffffff811681146122be57600080fd5b6000806040838503121561231857600080fd5b6122df836122ed565b60008060006060848603121561233657600080fd5b61233f846122a7565b925061234d602085016122a7565b9150604084013590509250925092565b6000806000806060858703121561237357600080fd5b61237c856122ed565b935060208501359250604085013567ffffffffffffffff808211156123a057600080fd5b818701915087601f8301126123b457600080fd5b8135818111156123c357600080fd5b8860208285010111156123d557600080fd5b95989497505060200194505050565b6000806000606084860312156123f957600080fd5b612402846122ed565b925060208401359150612417604085016122a7565b90509250925092565b60006020828403121561243257600080fd5b6108fa826122a7565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561246c5761246c61243b565b604051601f8501601f19908116603f011681019082821181831017156124945761249461243b565b816040528093508581528686860111156124ad57600080fd5b858560208301376000602087830101525050509392505050565b6000806000606084860312156124dc57600080fd5b6124e5846122a7565b925060208401359150604084013567ffffffffffffffff81111561250857600080fd5b8401601f8101861361251957600080fd5b61252886823560208401612451565b9150509250925092565b6000806040838503121561254557600080fd5b61254e836122a7565b91506020830135801515811461256357600080fd5b809150509250929050565b6000806000806080858703121561258457600080fd5b61258d856122a7565b935061259b602086016122a7565b925060408501359150606085013567ffffffffffffffff8111156125be57600080fd5b8501601f810187136125cf57600080fd5b6125de87823560208401612451565b91505092959194509250565b600080604083850312156125fd57600080fd5b612606836122a7565b9150612614602084016122a7565b90509250929050565b600181811c9082168061263157607f821691505b6020821081141561265257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561266a57600080fd5b5051919050565b67ffffffffffffffff871681526001600160a01b038616602082015260a060408201528360a0820152838560c0830137600060c085830101526000601f19601f860116820184606084015260c08382030160808401526126d460c082018561224f565b9998505050505050505050565b67ffffffffffffffff8616815260006001600160a01b03808716602084015280861660408401525083606083015260a0608083015261272360a083018461224f565b979650505050505050565b60008351612740818460208801612223565b835190830190612754818360208801612223565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156127855761278561275d565b500390565b6000821982111561279d5761279d61275d565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526127d4608083018461224f565b9695505050505050565b6000602082840312156127f057600080fd5b81516108fa816121f0565b600060001982141561280f5761280f61275d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261283b5761283b612816565b500490565b60008261284f5761284f612816565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204673ff758167a20caab1911fb6c55b66f6ce0725080b31e382f03d66c6894d5564736f6c63430008090033";

type MCNNFTConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MCNNFTConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MCNNFT__factory extends ContractFactory {
  constructor(...args: MCNNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MCNNFT";
  }

  deploy(
    name_: string,
    symbol_: string,
    _nftBridge: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MCNNFT> {
    return super.deploy(name_, symbol_, _nftBridge, overrides || {}) as Promise<MCNNFT>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    _nftBridge: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, _nftBridge, overrides || {});
  }
  attach(address: string): MCNNFT {
    return super.attach(address) as MCNNFT;
  }
  connect(signer: Signer): MCNNFT__factory {
    return super.connect(signer) as MCNNFT__factory;
  }
  static readonly contractName: "MCNNFT";
  public readonly contractName: "MCNNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MCNNFTInterface {
    return new utils.Interface(_abi) as MCNNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MCNNFT {
    return new Contract(address, _abi, signerOrProvider) as MCNNFT;
  }
}
