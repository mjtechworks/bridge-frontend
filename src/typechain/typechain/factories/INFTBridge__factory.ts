/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { INFTBridge, INFTBridgeInterface } from "../INFTBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_receiver",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "sendMsg",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "sendMsg",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_dstChid",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "totalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class INFTBridge__factory {
  static readonly abi = _abi;
  static createInterface(): INFTBridgeInterface {
    return new utils.Interface(_abi) as INFTBridgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): INFTBridge {
    return new Contract(address, _abi, signerOrProvider) as INFTBridge;
  }
}
