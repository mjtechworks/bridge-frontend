/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MsgTest, MsgTestInterface } from "../MsgTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_messageBus",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "messageBus",
        type: "address",
      },
    ],
    name: "MessageBusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageReceivedWithTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executeMessage",
    outputs: [
      {
        internalType: "enum IMessageReceiverApp.ExecutionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executeMessageWithTransfer",
    outputs: [
      {
        internalType: "enum IMessageReceiverApp.ExecutionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "executeMessageWithTransferFallback",
    outputs: [
      {
        internalType: "enum IMessageReceiverApp.ExecutionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executeMessageWithTransferRefund",
    outputs: [
      {
        internalType: "enum IMessageReceiverApp.ExecutionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "messageBus",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_dstChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_dstChainId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_maxSlippage",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "enum MsgDataTypes.BridgeSendType",
        name: "_bridgeSendType",
        type: "uint8",
      },
    ],
    name: "sendMessageWithTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messageBus",
        type: "address",
      },
    ],
    name: "setMessageBus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002240380380620022408339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b61214980620000f76000396000f3fe6080604052600436106100b15760003560e01c80638da5cb5b11610069578063a1a227fa1161004e578063a1a227fa1461017f578063c81739cd1461019f578063f2fde38b146101b257600080fd5b80638da5cb5b1461013a5780639c649fdf1461016c57600080fd5b80635ab7afc61161009a5780635ab7afc6146101015780637767b8d7146101145780637cd2bffc1461012757600080fd5b80630bcb4982146100b6578063547cad12146100df575b600080fd5b6100c96100c43660046118ec565b6101d2565b6040516100d69190611976565b60405180910390f35b3480156100eb57600080fd5b506100ff6100fa36600461199e565b6102a7565b005b6100c961010f3660046119d8565b610371565b6100ff610122366004611a6f565b6103d9565b6100c9610135366004611bea565b610491565b34801561014657600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100d6565b6100c961017a366004611c7a565b61056e565b34801561018b57600080fd5b50600154610154906001600160a01b031681565b6100ff6101ad366004611cc7565b610690565b3480156101be57600080fd5b506100ff6101cd36600461199e565b61072c565b6001546000906001600160a01b031633146102345760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064015b60405180910390fd5b60008061024385870187611d2a565b909250905061025c6001600160a01b038916838961081d565b7f28b3e4c963e8ed6cdcdd38aa916a725939823a99bbfa73fe91297cbd65076ebd828989846040516102919493929190611dd2565b60405180910390a1506001979650505050505050565b336102ba6000546001600160a01b031690565b6001600160a01b0316146103105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e9060200160405180910390a150565b6001546000906001600160a01b031633146103ce5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161022b565b979650505050505050565b6103ee6001600160a01b0388163330896108b2565b600033848460405160200161040593929190611e37565b604051602081830303815290604052905061043d89898989600160149054906101000a900467ffffffffffffffff168a8789346108f0565b5060018054600160a01b900467ffffffffffffffff1690601461045f83611e79565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050505050505050565b6001546000906001600160a01b031633146104ee5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161022b565b600080848060200190518101906105059190611ea1565b909250905061051e6001600160a01b038916838961081d565b7f853d38177348cfc87290e96c941a5fb96dc3da8a07c31163ddffe4da6661b76f88888b89868660405161055796959493929190611f2e565b60405180910390a150600198975050505050505050565b6001546000906001600160a01b031633146105cb5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161022b565b6000806105da85870187611f84565b915091508167ffffffffffffffff16655af3107a4001141561063e5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206e6f6e636500000000000000000000000000000000000000604482015260640161022b565b8167ffffffffffffffff16655af3107a4002141561065b57600080fd5b7f2bc20c63cdcc1b0e6aeb64fcaaf7ea3c8b999228a4a9ed2a2df1d2e17dd12520888884846040516102919493929190611fa0565b6000600160149054906101000a900467ffffffffffffffff1683836040516020016106bd93929190611fdc565b60408051808303601f1901815291905260018054919250600160a01b90910467ffffffffffffffff169060146106f283611e79565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505061072585858334610927565b5050505050565b3361073f6000546001600160a01b031690565b6001600160a01b0316146107955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b6001600160a01b0381166108115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161022b565b61081a81610943565b50565b6040516001600160a01b0383166024820152604481018290526108ad90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109a0565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108ea9085906323b872dd60e01b90608401610849565b50505050565b60006109198a8a8a8a8a8a8a8a600160009054906101000a90046001600160a01b03168b610a85565b9a9950505050505050505050565b6001546108ea908590859085906001600160a01b031685610bab565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006109f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c169092919063ffffffff16565b8051909150156108ad5780806020019051810190610a139190612000565b6108ad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161022b565b60006001846006811115610a9b57610a9b611960565b1415610ab957610ab28b8b8b8b8b8b8b8a8a610c2f565b9050610919565b6002846006811115610acd57610acd611960565b1480610aea57506004846006811115610ae857610ae8611960565b145b15610b0057610ab2848c8c8c8c8c8b8a8a610e47565b6003846006811115610b1457610b14611960565b1480610b3157506005846006811115610b2f57610b2f611960565b145b80610b4d57506006846006811115610b4b57610b4b611960565b145b15610b6357610ab2848c8c8c8c8c8b8a8a61117f565b60405162461bcd60e51b815260206004820152601960248201527f6272696467652074797065206e6f7420737570706f7274656400000000000000604482015260640161022b565b604051634f9e72ad60e11b81526001600160a01b03831690639f3ce55a908390610bdd90899089908990600401612022565b6000604051808303818588803b158015610bf657600080fd5b505af1158015610c0a573d6000803e3d6000fd5b50505050505050505050565b6060610c25848460008561152c565b90505b9392505050565b600080836001600160a01b03166382980dc46040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6b57600080fd5b505afa158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca39190612054565b9050610cb96001600160a01b038b16828b611669565b60405163a5977fbb60e01b81526001600160a01b038c811660048301528b81166024830152604482018b905267ffffffffffffffff808b1660648401528916608483015263ffffffff881660a483015282169063a5977fbb9060c401600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff1930606090811b821660208401528f811b821660348401528e901b166048820152605c81018c90526001600160c01b031960c08c811b8216607c8401528b811b8216608484015246901b16608c820152600092506094019050604051602081830303815290604052805190602001209050600086511115610e3857846001600160a01b0316634289fbb3858e8c86868c6040518763ffffffff1660e01b8152600401610e05959493929190612071565b6000604051808303818588803b158015610e1e57600080fd5b505af1158015610e32573d6000803e3d6000fd5b50505050505b9b9a5050505050505050505050565b60008060028b6006811115610e5e57610e5e611960565b1415610edc57836001600160a01b031663d8257d176040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9d57600080fd5b505afa158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed59190612054565b9050610f50565b836001600160a01b031663c66a9c5a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d9190612054565b90505b610f646001600160a01b038a16828a611669565b600060028c6006811115610f7a57610f7a611960565b141561109d576040516308d18d8960e21b81526001600160a01b038b81166004830152602482018b905267ffffffffffffffff808b1660448401528d821660648401528916608483015283169063234636249060a401600060405180830381600087803b158015610fea57600080fd5b505af1158015610ffe573d6000803e3d6000fd5b50505050308a8a8a8e8b466040516020016110809796959493929190606097881b6bffffffffffffffffffffffff19908116825296881b87166014820152602881019590955260c093841b6001600160c01b031990811660488701529290961b909416605084015292811b831660648301529290921b16606c82015260740190565b604051602081830303815290604052805190602001209050611142565b6040516308d18d8960e21b81526001600160a01b038b81166004830152602482018b905267ffffffffffffffff808b1660448401528d821660648401528916608483015283169063234636249060a401602060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f91906120b3565b90505b855115610e3857604051634289fbb360e01b81526001600160a01b03861690634289fbb3908690610e05908f908d90889088908e90600401612071565b60008060038b600681111561119657611196611960565b141561121457836001600160a01b031663dfa2dbaf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111d557600080fd5b505afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d9190612054565b9050611288565b836001600160a01b03166395b12c276040518163ffffffff1660e01b815260040160206040518083038186803b15801561124d57600080fd5b505afa158015611261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112859190612054565b90505b61129c6001600160a01b038a16828a611669565b600060038c60068111156112b2576112b2611960565b14156113af57604051636f3c863f60e11b81526001600160a01b038b81166004830152602482018b90528c8116604483015267ffffffffffffffff8916606483015283169063de790c7e90608401600060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff1930606090811b821660208401528e811b82166034840152604883018e90528f901b1660688201526001600160c01b031960c08b811b8216607c84015246901b166084820152608c0191506113929050565b604051602081830303815290604052805190602001209050611517565b60058c60068111156113c3576113c3611960565b14156114725760405163a002930160e01b81526001600160a01b038b81166004830152602482018b905267ffffffffffffffff808b1660448401528d821660648401528916608483015283169063a00293019060a401602060405180830381600087803b15801561143357600080fd5b505af1158015611447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146b91906120b3565b9050611517565b604051639e422c3360e01b81526001600160a01b038b81166004830152602482018b905267ffffffffffffffff808b1660448401528d8216606484015289166084830152831690639e422c339060a401602060405180830381600087803b1580156114dc57600080fd5b505af11580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151491906120b3565b90505b6111426001600160a01b038b1683600061172a565b6060824710156115a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161022b565b6001600160a01b0385163b6115fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b600080866001600160a01b0316858760405161161791906120cc565b60006040518083038185875af1925050503d8060008114611654576040519150601f19603f3d011682016040523d82523d6000602084013e611659565b606091505b50915091506103ce828286611855565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156116b557600080fd5b505afa1580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ed91906120b3565b6116f791906120e8565b6040516001600160a01b0385166024820152604481018290529091506108ea90859063095ea7b360e01b90606401610849565b8015806117b35750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561177957600080fd5b505afa15801561178d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b191906120b3565b155b6118255760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161022b565b6040516001600160a01b0383166024820152604481018290526108ad90849063095ea7b360e01b90606401610849565b60608315611864575081610c28565b8251156118745782518084602001fd5b8160405162461bcd60e51b815260040161022b9190612100565b6001600160a01b038116811461081a57600080fd5b60008083601f8401126118b557600080fd5b50813567ffffffffffffffff8111156118cd57600080fd5b6020830191508360208285010111156118e557600080fd5b9250929050565b60008060008060006080868803121561190457600080fd5b853561190f8161188e565b945060208601359350604086013567ffffffffffffffff81111561193257600080fd5b61193e888289016118a3565b90945092505060608601356119528161188e565b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016003831061199857634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156119b057600080fd5b8135610c288161188e565b803567ffffffffffffffff811681146119d357600080fd5b919050565b600080600080600080600060c0888a0312156119f357600080fd5b87356119fe8161188e565b96506020880135611a0e8161188e565b955060408801359450611a23606089016119bb565b9350608088013567ffffffffffffffff811115611a3f57600080fd5b611a4b8a828b016118a3565b90945092505060a0880135611a5f8161188e565b8091505092959891949750929550565b60008060008060008060008060e0898b031215611a8b57600080fd5b8835611a968161188e565b97506020890135611aa68161188e565b965060408901359550611abb60608a016119bb565b9450608089013563ffffffff81168114611ad457600080fd5b935060a089013567ffffffffffffffff811115611af057600080fd5b611afc8b828c016118a3565b90945092505060c089013560078110611b1457600080fd5b809150509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b6457611b64611b25565b604052919050565b600067ffffffffffffffff821115611b8657611b86611b25565b50601f01601f191660200190565b600082601f830112611ba557600080fd5b8135611bb8611bb382611b6c565b611b3b565b818152846020838601011115611bcd57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215611c0357600080fd5b8635611c0e8161188e565b95506020870135611c1e8161188e565b945060408701359350611c33606088016119bb565b9250608087013567ffffffffffffffff811115611c4f57600080fd5b611c5b89828a01611b94565b92505060a0870135611c6c8161188e565b809150509295509295509295565b600080600080600060808688031215611c9257600080fd5b8535611c9d8161188e565b9450611cab602087016119bb565b9350604086013567ffffffffffffffff81111561193257600080fd5b60008060008060608587031215611cdd57600080fd5b8435611ce88161188e565b9350611cf6602086016119bb565b9250604085013567ffffffffffffffff811115611d1257600080fd5b611d1e878288016118a3565b95989497509550505050565b60008060408385031215611d3d57600080fd5b8235611d488161188e565b9150602083013567ffffffffffffffff811115611d6457600080fd5b611d7085828601611b94565b9150509250929050565b60005b83811015611d95578181015183820152602001611d7d565b838111156108ea5750506000910152565b60008151808452611dbe816020860160208601611d7a565b601f01601f19169290920160200192915050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611e046080830184611da6565b9695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0384168152604060208201526000611e5a604083018486611e0e565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600067ffffffffffffffff80831681811415611e9757611e97611e63565b6001019392505050565b60008060408385031215611eb457600080fd5b8251611ebf8161188e565b602084015190925067ffffffffffffffff811115611edc57600080fd5b8301601f81018513611eed57600080fd5b8051611efb611bb382611b6c565b818152866020838501011115611f1057600080fd5b611f21826020830160208601611d7a565b8093505050509250929050565b60006001600160a01b038089168352876020840152808716604084015267ffffffffffffffff8616606084015280851660808401525060c060a0830152611f7860c0830184611da6565b98975050505050505050565b60008060408385031215611f9757600080fd5b611d48836119bb565b6001600160a01b0385168152600067ffffffffffffffff808616602084015280851660408401525060806060830152611e046080830184611da6565b67ffffffffffffffff84168152604060208201526000611e5a604083018486611e0e565b60006020828403121561201257600080fd5b81518015158114610c2857600080fd5b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000611e5a6060830184611da6565b60006020828403121561206657600080fd5b8151610c288161188e565b60006001600160a01b03808816835267ffffffffffffffff8716602084015280861660408401525083606083015260a060808301526103ce60a0830184611da6565b6000602082840312156120c557600080fd5b5051919050565b600082516120de818460208701611d7a565b9190910192915050565b600082198211156120fb576120fb611e63565b500190565b602081526000610c286020830184611da656fea264697066735822122019b765a3ed6bdd4e3fb8afb11307ab4002ab643276cc74581e5ecdbfaded3de264736f6c63430008090033";

type MsgTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MsgTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MsgTest__factory extends ContractFactory {
  constructor(...args: MsgTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MsgTest";
  }

  deploy(_messageBus: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<MsgTest> {
    return super.deploy(_messageBus, overrides || {}) as Promise<MsgTest>;
  }
  getDeployTransaction(
    _messageBus: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_messageBus, overrides || {});
  }
  attach(address: string): MsgTest {
    return super.attach(address) as MsgTest;
  }
  connect(signer: Signer): MsgTest__factory {
    return super.connect(signer) as MsgTest__factory;
  }
  static readonly contractName: "MsgTest";
  public readonly contractName: "MsgTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MsgTestInterface {
    return new utils.Interface(_abi) as MsgTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MsgTest {
    return new Contract(address, _abi, signerOrProvider) as MsgTest;
  }
}
