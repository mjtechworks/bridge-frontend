/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RestrictedMultiBridgeTokenOwner,
  RestrictedMultiBridgeTokenOwnerInterface,
} from "../RestrictedMultiBridgeTokenOwner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
    ],
    name: "changeBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "revokeBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
    ],
    name: "updateBridgeSupplyCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516107c83803806107c883398101604081905261002f916100cc565b61003833610060565b6001600160a01b03918216608052600180546001600160a01b031916919092161790556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100c757600080fd5b919050565b600080604083850312156100df57600080fd5b6100e8836100b0565b91506100f6602084016100b0565b90509250929050565b60805161069261013660003960008181610111015281816101c7015281816102bb0152818161033b015261045c01526106926000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bd578063e78cea92146100e6578063f2fde38b146100f9578063fc0c546a1461010c57600080fd5b80634910b86114610082578063531daeb0146100975780636beee716146100aa575b600080fd5b6100956100903660046105f7565b610133565b005b6100956100a5366004610619565b610227565b6100956100b8366004610643565b6103ca565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6001546100ca906001600160a01b031681565b6100956101073660046105f7565b61048d565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b336101466000546001600160a01b031690565b6001600160a01b0316146101a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040516326717b8d60e11b81526001600160a01b038281166004830152600060248301527f00000000000000000000000000000000000000000000000000000000000000001690634ce2f71a906044015b600060405180830381600087803b15801561020c57600080fd5b505af1158015610220573d6000803e3d6000fd5b5050505050565b3361023a6000546001600160a01b031690565b6001600160a01b0316146102905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610198565b600180546040516326717b8d60e11b81526001600160a01b03918216600482015260248101929092527f00000000000000000000000000000000000000000000000000000000000000001690634ce2f71a90604401600060405180830381600087803b1580156102ff57600080fd5b505af1158015610313573d6000803e3d6000fd5b50506040516326717b8d60e11b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169250634ce2f71a9150604401600060405180830381600087803b15801561038157600080fd5b505af1158015610395573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039590951694909417909355505050565b336103dd6000546001600160a01b031690565b6001600160a01b0316146104335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610198565b6001546040516326717b8d60e11b81526001600160a01b039182166004820152602481018390527f000000000000000000000000000000000000000000000000000000000000000090911690634ce2f71a906044016101f2565b336104a06000546001600160a01b031690565b6001600160a01b0316146104f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610198565b6001600160a01b0381166105725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610198565b61057b8161057e565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105f257600080fd5b919050565b60006020828403121561060957600080fd5b610612826105db565b9392505050565b6000806040838503121561062c57600080fd5b610635836105db565b946020939093013593505050565b60006020828403121561065557600080fd5b503591905056fea2646970667358221220f53d3cb84b329e9a52cdbdb6508e4ac293aa101168d587a90c46427581f6b7e264736f6c63430008090033";

type RestrictedMultiBridgeTokenOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RestrictedMultiBridgeTokenOwnerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RestrictedMultiBridgeTokenOwner__factory extends ContractFactory {
  constructor(...args: RestrictedMultiBridgeTokenOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RestrictedMultiBridgeTokenOwner";
  }

  deploy(
    _token: string,
    _bridge: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<RestrictedMultiBridgeTokenOwner> {
    return super.deploy(_token, _bridge, overrides || {}) as Promise<RestrictedMultiBridgeTokenOwner>;
  }
  getDeployTransaction(
    _token: string,
    _bridge: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _bridge, overrides || {});
  }
  attach(address: string): RestrictedMultiBridgeTokenOwner {
    return super.attach(address) as RestrictedMultiBridgeTokenOwner;
  }
  connect(signer: Signer): RestrictedMultiBridgeTokenOwner__factory {
    return super.connect(signer) as RestrictedMultiBridgeTokenOwner__factory;
  }
  static readonly contractName: "RestrictedMultiBridgeTokenOwner";
  public readonly contractName: "RestrictedMultiBridgeTokenOwner";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RestrictedMultiBridgeTokenOwnerInterface {
    return new utils.Interface(_abi) as RestrictedMultiBridgeTokenOwnerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RestrictedMultiBridgeTokenOwner {
    return new Contract(address, _abi, signerOrProvider) as RestrictedMultiBridgeTokenOwner;
  }
}
