/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SingleBridgeTokenPermit, SingleBridgeTokenPermitInterface } from "../SingleBridgeTokenPermit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "BridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b5060405162001b9938038062001b998339810160408190526200005a916200034b565b838383838780604051806040016040528060018152602001603160f81b8152508686816003908051906020019062000094929190620001d8565b508051620000aa906004906020840190620001d8565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200014990503362000186565b60ff91821661016052600780546001600160a01b0319166001600160a01b03929092169190911790559390931661018052506200042c9350505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001e690620003ef565b90600052602060002090601f0160209004810192826200020a576000855562000255565b82601f106200022557805160ff191683800117855562000255565b8280016001018555821562000255579182015b828111156200025557825182559160200191906001019062000238565b506200026392915062000267565b5090565b5b8082111562000263576000815560010162000268565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a657600080fd5b81516001600160401b0380821115620002c357620002c36200027e565b604051601f8301601f19908116603f01168101908282118183101715620002ee57620002ee6200027e565b816040528381526020925086838588010111156200030b57600080fd5b600091505b838210156200032f578582018301518183018401529082019062000310565b83821115620003415760008385830101525b9695505050505050565b600080600080608085870312156200036257600080fd5b84516001600160401b03808211156200037a57600080fd5b620003888883890162000294565b955060208701519150808211156200039f57600080fd5b50620003ae8782880162000294565b935050604085015160ff81168114620003c657600080fd5b60608601519092506001600160a01b0381168114620003e457600080fd5b939692955090935050565b600181811c908216806200040457607f821691505b602082108114156200042657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516116ff6200049a600039600061020a01526000505060006107da01526000610e0a01526000610e5901526000610e3401526000610d8d01526000610db701526000610de101526116ff6000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806379cc6790116100e3578063a457c2d71161008c578063dd62ed3e11610066578063dd62ed3e14610353578063e78cea921461038c578063f2fde38b1461039f57600080fd5b8063a457c2d71461031a578063a9059cbb1461032d578063d505accf1461034057600080fd5b80638da5cb5b116100bd5780638da5cb5b1461030157806395d89b41146103125780639dc29fac146102bb57600080fd5b806379cc6790146102bb5780637ecebe00146102ce578063893d20e8146102e157600080fd5b806339509351116101455780636eb382121161011f5780636eb382121461027557806370a082311461028a578063715018a6146102b357600080fd5b8063395093511461023c57806340c10f191461024f57806342966c681461026257600080fd5b806323b872dd1161017657806323b872dd146101f0578063313ce567146102035780633644e5151461023457600080fd5b806306fdde031461019d578063095ea7b3146101bb57806318160ddd146101de575b600080fd5b6101a56103b2565b6040516101b29190611488565b60405180910390f35b6101ce6101c93660046114f9565b610444565b60405190151581526020016101b2565b6002545b6040519081526020016101b2565b6101ce6101fe366004611523565b61045c565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101b2565b6101e2610480565b6101ce61024a3660046114f9565b61048f565b6101ce61025d3660046114f9565b6104ce565b6101ce61027036600461155f565b610543565b610288610283366004611578565b610557565b005b6101e2610298366004611578565b6001600160a01b031660009081526020819052604090205490565b610288610612565b6101ce6102c93660046114f9565b610678565b6101e26102dc366004611578565b61068b565b6102e96106ab565b6040516001600160a01b0390911681526020016101b2565b6006546001600160a01b03166102e9565b6101a56106bf565b6101ce6103283660046114f9565b6106ce565b6101ce61033b3660046114f9565b610778565b61028861034e366004611593565b610786565b6101e2610361366004611606565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546102e9906001600160a01b031681565b6102886103ad366004611578565b6108ea565b6060600380546103c190611639565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90611639565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050905090565b6000336104528185856109cc565b5060019392505050565b60003361046a858285610af1565b610475858585610b83565b506001949350505050565b600061048a610d80565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061045290829086906104c9908790611684565b6109cc565b6007546000906001600160a01b031633146105305760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206973206e6f742062726964676500000000000000000000000060448201526064015b60405180910390fd5b61053a8383610ea7565b50600192915050565b600061054f3383610f86565b506001919050565b6006546001600160a01b031633146105b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a9060200160405180910390a150565b6006546001600160a01b0316331461066c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b61067660006110cc565b565b6000610684838361112b565b9392505050565b6001600160a01b0381166000908152600560205260408120545b92915050565b600061048a6006546001600160a01b031690565b6060600480546103c190611639565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561076b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610527565b61047582868684036109cc565b600033610452818585610b83565b834211156107d65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610527565b60007f00000000000000000000000000000000000000000000000000000000000000008888886108058c611142565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108608261116a565b90506000610870828787876111b8565b9050896001600160a01b0316816001600160a01b0316146108d35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610527565b6108de8a8a8a6109cc565b50505050505050505050565b6006546001600160a01b031633146109445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b6001600160a01b0381166109c05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610527565b6109c9816110cc565b50565b6001600160a01b038316610a2e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610527565b6001600160a01b038216610a8f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610527565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610b7d5781811015610b705760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610527565b610b7d84848484036109cc565b50505050565b6001600160a01b038316610bff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610527565b6001600160a01b038216610c615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610527565b6001600160a01b03831660009081526020819052604090205481811015610cf05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610527565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d27908490611684565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d7391815260200190565b60405180910390a3610b7d565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610dd957507f000000000000000000000000000000000000000000000000000000000000000046145b15610e0357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610efd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610527565b8060026000828254610f0f9190611684565b90915550506001600160a01b03821660009081526020819052604081208054839290610f3c908490611684565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610fe65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610527565b6001600160a01b0382166000908152602081905260409020548181101561105a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610527565b6001600160a01b038316600090815260208190526040812083830390556002805484929061108990849061169c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ae4565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611138833384610af1565b61053a8383610f86565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006106a5611177610d80565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006111c9878787876111e0565b915091506111d6816112cd565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561121757506000905060036112c4565b8460ff16601b1415801561122f57508460ff16601c14155b1561124057506000905060046112c4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611294573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112bd576000600192509250506112c4565b9150600090505b94509492505050565b60008160048111156112e1576112e16116b3565b14156112ea5750565b60018160048111156112fe576112fe6116b3565b141561134c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610527565b6002816004811115611360576113606116b3565b14156113ae5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610527565b60038160048111156113c2576113c26116b3565b141561141b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610527565b600481600481111561142f5761142f6116b3565b14156109c95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610527565b600060208083528351808285015260005b818110156114b557858101830151858201604001528201611499565b818111156114c7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114f457600080fd5b919050565b6000806040838503121561150c57600080fd5b611515836114dd565b946020939093013593505050565b60008060006060848603121561153857600080fd5b611541846114dd565b925061154f602085016114dd565b9150604084013590509250925092565b60006020828403121561157157600080fd5b5035919050565b60006020828403121561158a57600080fd5b610684826114dd565b600080600080600080600060e0888a0312156115ae57600080fd5b6115b7886114dd565b96506115c5602089016114dd565b95506040880135945060608801359350608088013560ff811681146115e957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561161957600080fd5b611622836114dd565b9150611630602084016114dd565b90509250929050565b600181811c9082168061164d57607f821691505b6020821081141561116457634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156116975761169761166e565b500190565b6000828210156116ae576116ae61166e565b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220281e4cf59e35e33472a283e55355119c61e9f1b7d360e0ccd31fe450caee4cc564736f6c63430008090033";

type SingleBridgeTokenPermitConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleBridgeTokenPermitConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SingleBridgeTokenPermit__factory extends ContractFactory {
  constructor(...args: SingleBridgeTokenPermitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SingleBridgeTokenPermit";
  }

  deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    bridge_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SingleBridgeTokenPermit> {
    return super.deploy(name_, symbol_, decimals_, bridge_, overrides || {}) as Promise<SingleBridgeTokenPermit>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    bridge_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, decimals_, bridge_, overrides || {});
  }
  attach(address: string): SingleBridgeTokenPermit {
    return super.attach(address) as SingleBridgeTokenPermit;
  }
  connect(signer: Signer): SingleBridgeTokenPermit__factory {
    return super.connect(signer) as SingleBridgeTokenPermit__factory;
  }
  static readonly contractName: "SingleBridgeTokenPermit";
  public readonly contractName: "SingleBridgeTokenPermit";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleBridgeTokenPermitInterface {
    return new utils.Interface(_abi) as SingleBridgeTokenPermitInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SingleBridgeTokenPermit {
    return new Contract(address, _abi, signerOrProvider) as SingleBridgeTokenPermit;
  }
}
