/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface INFTBridgeInterface extends utils.Interface {
  contractName: "INFTBridge";
  functions: {
    "sendMsg(uint64,address,bytes,uint256,string)": FunctionFragment;
    "totalFee(uint64,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "sendMsg",
    values: [BigNumberish, string, BytesLike, BigNumberish, string],
  ): string;
  encodeFunctionData(functionFragment: "totalFee", values: [BigNumberish, string, BigNumberish]): string;

  decodeFunctionResult(functionFragment: "sendMsg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "totalFee", data: BytesLike): Result;

  events: {};
}

export interface INFTBridge extends BaseContract {
  contractName: "INFTBridge";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: INFTBridgeInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    "sendMsg(uint64,address,bytes,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: BytesLike,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    "sendMsg(uint64,address,address,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: string,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    totalFee(_dstChid: BigNumberish, _nft: string, _id: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  "sendMsg(uint64,address,bytes,uint256,string)"(
    _dstChid: BigNumberish,
    _sender: string,
    _receiver: BytesLike,
    _id: BigNumberish,
    _uri: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  "sendMsg(uint64,address,address,uint256,string)"(
    _dstChid: BigNumberish,
    _sender: string,
    _receiver: string,
    _id: BigNumberish,
    _uri: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  totalFee(_dstChid: BigNumberish, _nft: string, _id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    "sendMsg(uint64,address,bytes,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: BytesLike,
      _id: BigNumberish,
      _uri: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    "sendMsg(uint64,address,address,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: string,
      _id: BigNumberish,
      _uri: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    totalFee(_dstChid: BigNumberish, _nft: string, _id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    "sendMsg(uint64,address,bytes,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: BytesLike,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    "sendMsg(uint64,address,address,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: string,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    totalFee(_dstChid: BigNumberish, _nft: string, _id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    "sendMsg(uint64,address,bytes,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: BytesLike,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    "sendMsg(uint64,address,address,uint256,string)"(
      _dstChid: BigNumberish,
      _sender: string,
      _receiver: string,
      _id: BigNumberish,
      _uri: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    totalFee(
      _dstChid: BigNumberish,
      _nft: string,
      _id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
